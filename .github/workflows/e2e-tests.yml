name: E2E Tests

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  e2e-tests:
    runs-on: macos-14
    timeout-minutes: 30
    
    steps:
      - name: Checkout iOS repository
        uses: actions/checkout@v4
        with:
          repository: markboulton/veloready
          
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
          
      - name: Setup Java for Maestro
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Install Maestro
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH
          
      - name: Build iOS app
        run: |
          xcodebuild build \
            -scheme VeloReady \
            -destination 'platform=iOS Simulator,name=iPhone 17' \
            -configuration Debug
            
      - name: Start iOS Simulator
        run: |
          xcrun simctl boot "iPhone 17" || true
          xcrun simctl install "iPhone 17" /Users/runner/Library/Developer/Xcode/DerivedData/VeloReady-*/Build/Products/Debug-iphonesimulator/VeloReady.app || true
          
      - name: Wait for Simulator
        run: |
          xcrun simctl boot "iPhone 17"
          sleep 30
          
      - name: Run E2E Tests
        run: |
          cd tests/e2e
          chmod +x run-e2e-tests.sh
          ./run-e2e-tests.sh
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}
          
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: |
            tests/e2e/reports/
            tests/e2e/screenshots/
            tests/e2e/videos/
            
      - name: Upload Test Logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-logs
          path: |
            ~/Library/Logs/DiagnosticReports/
            ~/Library/Developer/Xcode/DerivedData/
