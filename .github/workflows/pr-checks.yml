name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches: [main]

jobs:
  # Tier 1: Fast feedback on every push (5-10 minutes)
  lint:
    runs-on: macos-14
    if: github.event_name == 'push' || github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v4
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.0'
      - name: Run SwiftLint
        run: |
          if command -v swiftlint &> /dev/null; then
            swiftlint
          else
            echo "SwiftLint not installed, skipping..."
          fi

  unit_tests:
    runs-on: macos-14
    if: github.event_name == 'push' || github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v4
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.0'
          
      - name: Verify Xcode Installation
        run: |
          echo "Xcode version:"
          xcodebuild -version
          echo "Xcode path:"
          xcode-select -p
          echo "Available simulators:"
          xcrun simctl list devices | head -10
          
      - name: Validate Project File
        run: |
          echo "Checking project file integrity..."
          file VeloReady.xcodeproj/project.pbxproj
          echo "Project file size: $(wc -c < VeloReady.xcodeproj/project.pbxproj) bytes"
          echo "Checking for malformed entries..."
          grep -c "isa.*=" VeloReady.xcodeproj/project.pbxproj || echo "No isa entries found"
          
      - name: Fix Project File if Corrupted
        run: |
          echo "Attempting to fix project file if corrupted..."
          # Check if project file is readable
          if ! xcodebuild -list -project VeloReady.xcodeproj > /dev/null 2>&1; then
            echo "Project file appears corrupted, attempting to fix..."
            # Try to fix line endings
            dos2unix VeloReady.xcodeproj/project.pbxproj 2>/dev/null || true
            # Try to fix encoding
            iconv -f UTF-8 -t UTF-8 VeloReady.xcodeproj/project.pbxproj > /tmp/project.pbxproj && mv /tmp/project.pbxproj VeloReady.xcodeproj/project.pbxproj
            echo "Project file fix attempted"
            
            # If still corrupted, try to regenerate from source
            if ! xcodebuild -list -project VeloReady.xcodeproj > /dev/null 2>&1; then
              echo "Project file still corrupted, attempting to regenerate..."
              # This is a last resort - we'll need to check if there are any source control issues
              git status
              git diff HEAD~1 VeloReady.xcodeproj/project.pbxproj || echo "No recent changes to project file"
              
              # Try to restore from git
              echo "Attempting to restore project file from git..."
              git checkout HEAD -- VeloReady.xcodeproj/project.pbxproj
              
              # Verify the restored file
              if xcodebuild -list -project VeloReady.xcodeproj > /dev/null 2>&1; then
                echo "Project file restored successfully"
              else
                echo "Project file restoration failed"
                exit 1
              fi
            fi
          else
            echo "Project file appears to be valid"
          fi
          
      - name: Clean and Prepare Build
        run: |
          echo "Cleaning build directory..."
          rm -rf build/
          mkdir -p build/
          
      - name: Run Unit Tests
        run: |
          xcodebuild test \
            -project VeloReady.xcodeproj \
            -scheme VeloReady \
            -destination 'platform=iOS Simulator,name=iPhone 15 Pro' \
            -only-testing:VeloReadyTests/Unit \
            -quiet \
            -hideShellScriptEnvironment

  # Tier 2: Full confidence before merging (15-30+ minutes)
  integration_tests:
    runs-on: macos-14
    if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v4
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.0'
      - name: Run Integration Tests
        run: |
          xcodebuild test \
            -project VeloReady.xcodeproj \
            -scheme VeloReady \
            -destination 'platform=iOS Simulator,name=iPhone 15 Pro' \
            -only-testing:VeloReadyTests/Integration \
            -quiet \
            -hideShellScriptEnvironment

  backend_tests:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v4
        with:
          repository: markboulton/veloready-website
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm ci
      - name: Run Backend Tests
        run: npm test

  # Tier 3: E2E smoke test (critical paths only)
  e2e_smoke:
    runs-on: macos-14
    timeout-minutes: 30  # Prevent infinite runs
    if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java for Maestro
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Install Maestro
        run: |
          brew tap mobile-dev-inc/tap
          brew install maestro
      - name: Build iOS App
        run: |
          xcodebuild build \
            -project VeloReady.xcodeproj \
            -scheme VeloReady \
            -destination 'platform=iOS Simulator,name=iPhone 15 Pro' \
            -configuration Debug \
            SKIP_INSTALL=NO \
            BUILD_DIR=$(pwd)/build \
            -quiet \
            -hideShellScriptEnvironment
      - name: Create Results Directory
        run: mkdir -p maestro-results/
        
      - name: Run E2E Smoke Tests
        run: |
          # Only run critical path tests for PRs
          echo "Starting E2E smoke tests"
          set -e  # Exit on any error
          maestro test tests/e2e/scenarios/training-load.yaml --format junit --output maestro-results/ || {
            echo "Training load test failed"
            exit 1
          }
          maestro test tests/e2e/scenarios/onboarding.yaml --format junit --output maestro-results/ || {
            echo "Onboarding test failed"
            exit 1
          }
        env:
          MAESTRO_LOG_LEVEL: WARN  # Reduce log verbosity
